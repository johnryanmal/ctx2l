# Generated from ./ctx2lLexer.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


if __name__ is not None and "." in __name__:
    from .ctx2lLexerAdaptor import ctx2lLexerAdaptor
else:
    from ctx2lLexerAdaptor import ctx2lLexerAdaptor

def serializedATN():
    return [
        4,0,62,804,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
        4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,
        2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,
        7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,
        2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,
        7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,
        2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,
        7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,
        2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,
        7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,
        2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
        7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,
        2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,
        7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,
        2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,
        7,96,2,97,7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,
        7,102,2,103,7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,
        2,108,7,108,2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,
        7,113,2,114,7,114,2,115,7,115,2,116,7,116,2,117,7,117,2,118,7,118,
        2,119,7,119,2,120,7,120,2,121,7,121,2,122,7,122,2,123,7,123,1,0,
        1,0,1,0,1,0,1,0,5,0,258,8,0,10,0,12,0,261,9,0,1,0,1,0,1,0,1,0,1,
        0,5,0,268,8,0,10,0,12,0,271,9,0,1,0,3,0,274,8,0,1,1,1,1,1,1,1,1,
        1,1,5,1,281,8,1,10,1,12,1,284,9,1,1,1,1,1,1,1,1,1,1,1,5,1,291,8,
        1,10,1,12,1,294,9,1,1,1,3,1,297,8,1,1,2,1,2,1,2,1,2,5,2,303,8,2,
        10,2,12,2,306,9,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,
        6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,11,
        1,11,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,
        1,15,1,15,1,15,1,15,1,15,1,15,5,15,354,8,15,10,15,12,15,357,9,15,
        1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,5,16,369,8,16,
        10,16,12,16,372,9,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,5,17,386,8,17,10,17,12,17,389,9,17,1,17,1,17,1,18,
        1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,
        1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,
        1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,
        1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
        1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
        1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,
        1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,
        1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,
        1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,
        1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,
        1,52,1,53,1,53,1,54,1,54,1,55,4,55,543,8,55,11,55,12,55,544,1,55,
        1,55,1,56,1,56,1,56,1,56,1,57,1,57,3,57,555,8,57,1,58,1,58,1,59,
        1,59,1,60,1,60,1,60,1,60,1,60,3,60,566,8,60,1,61,1,61,1,61,1,62,
        1,62,1,62,1,62,1,62,3,62,576,8,62,3,62,578,8,62,3,62,580,8,62,3,
        62,582,8,62,1,63,1,63,1,63,5,63,587,8,63,10,63,12,63,590,9,63,3,
        63,592,8,63,1,64,1,64,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,66,1,
        66,1,66,1,66,3,66,607,8,66,1,67,1,67,1,67,3,67,612,8,67,1,67,1,67,
        1,68,1,68,1,68,5,68,619,8,68,10,68,12,68,622,9,68,1,68,1,68,1,69,
        1,69,1,69,5,69,629,8,69,10,69,12,69,632,9,69,1,69,1,69,1,70,1,70,
        1,70,5,70,639,8,70,10,70,12,70,642,9,70,1,71,1,71,1,71,1,71,3,71,
        648,8,71,1,72,1,72,1,73,1,73,1,73,1,73,1,74,1,74,1,75,1,75,1,76,
        1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,82,
        1,82,1,83,1,83,1,84,1,84,1,85,1,85,1,85,1,86,1,86,1,87,1,87,1,88,
        1,88,1,89,1,89,1,90,1,90,1,91,1,91,1,92,1,92,1,92,1,93,1,93,1,94,
        1,94,1,95,1,95,1,96,1,96,1,97,1,97,1,98,1,98,1,99,1,99,1,99,1,100,
        1,100,1,101,1,101,1,102,1,102,1,103,1,103,1,103,1,103,1,103,1,104,
        1,104,1,104,1,104,1,105,1,105,1,105,1,105,1,106,1,106,1,106,1,106,
        1,107,1,107,1,107,1,108,1,108,1,108,1,108,1,109,1,109,1,110,1,110,
        1,110,1,110,1,110,1,111,1,111,1,111,1,111,1,112,1,112,1,112,1,112,
        1,113,1,113,1,113,1,113,1,114,1,114,1,114,1,114,1,115,1,115,1,115,
        1,115,1,116,1,116,1,116,1,116,1,117,1,117,1,117,1,118,1,118,1,118,
        1,118,1,119,1,119,1,120,1,120,4,120,784,8,120,11,120,12,120,785,
        1,120,1,120,1,121,1,121,1,121,1,121,1,122,1,122,1,122,1,122,1,123,
        1,123,5,123,800,8,123,10,123,12,123,803,9,123,2,259,282,0,124,4,
        0,6,0,8,0,10,0,12,4,14,5,16,6,18,7,20,8,22,9,24,10,26,11,28,12,30,
        13,32,14,34,15,36,16,38,17,40,0,42,18,44,19,46,20,48,21,50,22,52,
        23,54,24,56,25,58,26,60,27,62,28,64,29,66,30,68,31,70,32,72,33,74,
        34,76,35,78,36,80,37,82,38,84,39,86,40,88,41,90,42,92,43,94,44,96,
        45,98,46,100,47,102,48,104,49,106,50,108,51,110,52,112,53,114,54,
        116,55,118,0,120,0,122,0,124,0,126,0,128,0,130,0,132,0,134,0,136,
        0,138,0,140,0,142,0,144,0,146,0,148,0,150,0,152,0,154,0,156,0,158,
        0,160,0,162,0,164,0,166,0,168,0,170,0,172,0,174,0,176,0,178,0,180,
        0,182,0,184,0,186,0,188,0,190,0,192,0,194,0,196,0,198,0,200,0,202,
        0,204,0,206,0,208,0,210,0,212,0,214,0,216,0,218,56,220,57,222,58,
        224,0,226,0,228,0,230,0,232,0,234,0,236,0,238,59,240,60,242,61,244,
        0,246,3,248,62,250,0,4,0,1,2,3,13,2,0,10,10,13,13,3,0,9,10,12,13,
        32,32,2,0,9,9,32,32,2,0,10,10,12,13,8,0,34,34,39,39,92,92,98,98,
        102,102,110,110,114,114,116,116,1,0,49,57,3,0,48,57,65,70,97,102,
        1,0,48,57,4,0,10,10,13,13,39,39,92,92,4,0,10,10,13,13,34,34,92,92,
        3,0,183,183,768,879,8255,8256,13,0,65,90,97,122,192,214,216,246,
        248,767,880,893,895,8191,8204,8205,8304,8591,11264,12271,12289,55295,
        63744,64975,65008,65533,1,0,92,93,784,0,10,1,0,0,0,0,12,1,0,0,0,
        0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,
        0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,
        0,34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,
        0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,
        0,56,1,0,0,0,0,58,1,0,0,0,0,60,1,0,0,0,0,62,1,0,0,0,0,64,1,0,0,0,
        0,66,1,0,0,0,0,68,1,0,0,0,0,70,1,0,0,0,0,72,1,0,0,0,0,74,1,0,0,0,
        0,76,1,0,0,0,0,78,1,0,0,0,0,80,1,0,0,0,0,82,1,0,0,0,0,84,1,0,0,0,
        0,86,1,0,0,0,0,88,1,0,0,0,0,90,1,0,0,0,0,92,1,0,0,0,0,94,1,0,0,0,
        0,96,1,0,0,0,0,98,1,0,0,0,0,100,1,0,0,0,0,102,1,0,0,0,0,104,1,0,
        0,0,0,106,1,0,0,0,0,108,1,0,0,0,0,110,1,0,0,0,0,112,1,0,0,0,0,114,
        1,0,0,0,0,116,1,0,0,0,1,210,1,0,0,0,1,212,1,0,0,0,1,214,1,0,0,0,
        1,216,1,0,0,0,1,218,1,0,0,0,1,220,1,0,0,0,1,222,1,0,0,0,2,224,1,
        0,0,0,2,226,1,0,0,0,2,228,1,0,0,0,2,230,1,0,0,0,2,232,1,0,0,0,2,
        234,1,0,0,0,2,236,1,0,0,0,2,238,1,0,0,0,2,240,1,0,0,0,2,242,1,0,
        0,0,3,244,1,0,0,0,3,246,1,0,0,0,3,248,1,0,0,0,4,252,1,0,0,0,6,275,
        1,0,0,0,8,298,1,0,0,0,10,307,1,0,0,0,12,312,1,0,0,0,14,314,1,0,0,
        0,16,316,1,0,0,0,18,319,1,0,0,0,20,323,1,0,0,0,22,327,1,0,0,0,24,
        331,1,0,0,0,26,333,1,0,0,0,28,335,1,0,0,0,30,337,1,0,0,0,32,340,
        1,0,0,0,34,344,1,0,0,0,36,360,1,0,0,0,38,375,1,0,0,0,40,392,1,0,
        0,0,42,394,1,0,0,0,44,401,1,0,0,0,46,410,1,0,0,0,48,416,1,0,0,0,
        50,423,1,0,0,0,52,431,1,0,0,0,54,441,1,0,0,0,56,448,1,0,0,0,58,456,
        1,0,0,0,60,464,1,0,0,0,62,471,1,0,0,0,64,478,1,0,0,0,66,484,1,0,
        0,0,68,492,1,0,0,0,70,497,1,0,0,0,72,499,1,0,0,0,74,501,1,0,0,0,
        76,503,1,0,0,0,78,505,1,0,0,0,80,507,1,0,0,0,82,509,1,0,0,0,84,511,
        1,0,0,0,86,513,1,0,0,0,88,515,1,0,0,0,90,517,1,0,0,0,92,519,1,0,
        0,0,94,521,1,0,0,0,96,523,1,0,0,0,98,525,1,0,0,0,100,527,1,0,0,0,
        102,529,1,0,0,0,104,531,1,0,0,0,106,533,1,0,0,0,108,535,1,0,0,0,
        110,537,1,0,0,0,112,539,1,0,0,0,114,542,1,0,0,0,116,548,1,0,0,0,
        118,554,1,0,0,0,120,556,1,0,0,0,122,558,1,0,0,0,124,560,1,0,0,0,
        126,567,1,0,0,0,128,570,1,0,0,0,130,591,1,0,0,0,132,593,1,0,0,0,
        134,595,1,0,0,0,136,606,1,0,0,0,138,608,1,0,0,0,140,615,1,0,0,0,
        142,625,1,0,0,0,144,635,1,0,0,0,146,647,1,0,0,0,148,649,1,0,0,0,
        150,651,1,0,0,0,152,655,1,0,0,0,154,657,1,0,0,0,156,659,1,0,0,0,
        158,662,1,0,0,0,160,664,1,0,0,0,162,666,1,0,0,0,164,668,1,0,0,0,
        166,670,1,0,0,0,168,672,1,0,0,0,170,674,1,0,0,0,172,676,1,0,0,0,
        174,678,1,0,0,0,176,681,1,0,0,0,178,683,1,0,0,0,180,685,1,0,0,0,
        182,687,1,0,0,0,184,689,1,0,0,0,186,691,1,0,0,0,188,693,1,0,0,0,
        190,696,1,0,0,0,192,698,1,0,0,0,194,700,1,0,0,0,196,702,1,0,0,0,
        198,704,1,0,0,0,200,706,1,0,0,0,202,708,1,0,0,0,204,711,1,0,0,0,
        206,713,1,0,0,0,208,715,1,0,0,0,210,717,1,0,0,0,212,722,1,0,0,0,
        214,726,1,0,0,0,216,730,1,0,0,0,218,734,1,0,0,0,220,737,1,0,0,0,
        222,741,1,0,0,0,224,743,1,0,0,0,226,748,1,0,0,0,228,752,1,0,0,0,
        230,756,1,0,0,0,232,760,1,0,0,0,234,764,1,0,0,0,236,768,1,0,0,0,
        238,772,1,0,0,0,240,775,1,0,0,0,242,779,1,0,0,0,244,783,1,0,0,0,
        246,789,1,0,0,0,248,793,1,0,0,0,250,797,1,0,0,0,252,253,5,33,0,0,
        253,254,5,45,0,0,254,255,5,45,0,0,255,259,1,0,0,0,256,258,9,0,0,
        0,257,256,1,0,0,0,258,261,1,0,0,0,259,260,1,0,0,0,259,257,1,0,0,
        0,260,273,1,0,0,0,261,259,1,0,0,0,262,263,5,45,0,0,263,264,5,45,
        0,0,264,265,5,45,0,0,265,269,1,0,0,0,266,268,8,0,0,0,267,266,1,0,
        0,0,268,271,1,0,0,0,269,267,1,0,0,0,269,270,1,0,0,0,270,274,1,0,
        0,0,271,269,1,0,0,0,272,274,5,0,0,1,273,262,1,0,0,0,273,272,1,0,
        0,0,274,5,1,0,0,0,275,276,5,63,0,0,276,277,5,45,0,0,277,278,5,45,
        0,0,278,282,1,0,0,0,279,281,9,0,0,0,280,279,1,0,0,0,281,284,1,0,
        0,0,282,283,1,0,0,0,282,280,1,0,0,0,283,296,1,0,0,0,284,282,1,0,
        0,0,285,286,5,45,0,0,286,287,5,45,0,0,287,288,5,45,0,0,288,292,1,
        0,0,0,289,291,8,0,0,0,290,289,1,0,0,0,291,294,1,0,0,0,292,290,1,
        0,0,0,292,293,1,0,0,0,293,297,1,0,0,0,294,292,1,0,0,0,295,297,5,
        0,0,1,296,285,1,0,0,0,296,295,1,0,0,0,297,7,1,0,0,0,298,299,5,45,
        0,0,299,300,5,45,0,0,300,304,1,0,0,0,301,303,8,0,0,0,302,301,1,0,
        0,0,303,306,1,0,0,0,304,302,1,0,0,0,304,305,1,0,0,0,305,9,1,0,0,
        0,306,304,1,0,0,0,307,308,3,170,83,0,308,309,1,0,0,0,309,310,6,3,
        0,0,310,311,6,3,1,0,311,11,1,0,0,0,312,313,3,166,81,0,313,13,1,0,
        0,0,314,315,3,168,82,0,315,15,1,0,0,0,316,317,5,45,0,0,317,318,5,
        62,0,0,318,17,1,0,0,0,319,320,3,6,1,0,320,321,1,0,0,0,321,322,6,
        7,2,0,322,19,1,0,0,0,323,324,3,4,0,0,324,325,1,0,0,0,325,326,6,8,
        2,0,326,21,1,0,0,0,327,328,3,8,2,0,328,329,1,0,0,0,329,330,6,9,2,
        0,330,23,1,0,0,0,331,332,3,130,63,0,332,25,1,0,0,0,333,334,3,140,
        68,0,334,27,1,0,0,0,335,336,3,144,70,0,336,29,1,0,0,0,337,338,3,
        170,83,0,338,339,6,13,3,0,339,31,1,0,0,0,340,341,3,166,81,0,341,
        342,1,0,0,0,342,343,6,14,4,0,343,33,1,0,0,0,344,345,5,111,0,0,345,
        346,5,112,0,0,346,347,5,116,0,0,347,348,5,105,0,0,348,349,5,111,
        0,0,349,350,5,110,0,0,350,351,5,115,0,0,351,355,1,0,0,0,352,354,
        3,40,18,0,353,352,1,0,0,0,354,357,1,0,0,0,355,353,1,0,0,0,355,356,
        1,0,0,0,356,358,1,0,0,0,357,355,1,0,0,0,358,359,5,123,0,0,359,35,
        1,0,0,0,360,361,5,116,0,0,361,362,5,111,0,0,362,363,5,107,0,0,363,
        364,5,101,0,0,364,365,5,110,0,0,365,366,5,115,0,0,366,370,1,0,0,
        0,367,369,3,40,18,0,368,367,1,0,0,0,369,372,1,0,0,0,370,368,1,0,
        0,0,370,371,1,0,0,0,371,373,1,0,0,0,372,370,1,0,0,0,373,374,5,123,
        0,0,374,37,1,0,0,0,375,376,5,99,0,0,376,377,5,104,0,0,377,378,5,
        97,0,0,378,379,5,110,0,0,379,380,5,110,0,0,380,381,5,101,0,0,381,
        382,5,108,0,0,382,383,5,115,0,0,383,387,1,0,0,0,384,386,3,40,18,
        0,385,384,1,0,0,0,386,389,1,0,0,0,387,385,1,0,0,0,387,388,1,0,0,
        0,388,390,1,0,0,0,389,387,1,0,0,0,390,391,5,123,0,0,391,39,1,0,0,
        0,392,393,7,1,0,0,393,41,1,0,0,0,394,395,5,105,0,0,395,396,5,109,
        0,0,396,397,5,112,0,0,397,398,5,111,0,0,398,399,5,114,0,0,399,400,
        5,116,0,0,400,43,1,0,0,0,401,402,5,102,0,0,402,403,5,114,0,0,403,
        404,5,97,0,0,404,405,5,103,0,0,405,406,5,109,0,0,406,407,5,101,0,
        0,407,408,5,110,0,0,408,409,5,116,0,0,409,45,1,0,0,0,410,411,5,108,
        0,0,411,412,5,101,0,0,412,413,5,120,0,0,413,414,5,101,0,0,414,415,
        5,114,0,0,415,47,1,0,0,0,416,417,5,112,0,0,417,418,5,97,0,0,418,
        419,5,114,0,0,419,420,5,115,0,0,420,421,5,101,0,0,421,422,5,114,
        0,0,422,49,1,0,0,0,423,424,5,103,0,0,424,425,5,114,0,0,425,426,5,
        97,0,0,426,427,5,109,0,0,427,428,5,109,0,0,428,429,5,97,0,0,429,
        430,5,114,0,0,430,51,1,0,0,0,431,432,5,112,0,0,432,433,5,114,0,0,
        433,434,5,111,0,0,434,435,5,116,0,0,435,436,5,101,0,0,436,437,5,
        99,0,0,437,438,5,116,0,0,438,439,5,101,0,0,439,440,5,100,0,0,440,
        53,1,0,0,0,441,442,5,112,0,0,442,443,5,117,0,0,443,444,5,98,0,0,
        444,445,5,108,0,0,445,446,5,105,0,0,446,447,5,99,0,0,447,55,1,0,
        0,0,448,449,5,112,0,0,449,450,5,114,0,0,450,451,5,105,0,0,451,452,
        5,118,0,0,452,453,5,97,0,0,453,454,5,116,0,0,454,455,5,101,0,0,455,
        57,1,0,0,0,456,457,5,114,0,0,457,458,5,101,0,0,458,459,5,116,0,0,
        459,460,5,117,0,0,460,461,5,114,0,0,461,462,5,110,0,0,462,463,5,
        115,0,0,463,59,1,0,0,0,464,465,5,108,0,0,465,466,5,111,0,0,466,467,
        5,99,0,0,467,468,5,97,0,0,468,469,5,108,0,0,469,470,5,115,0,0,470,
        61,1,0,0,0,471,472,5,116,0,0,472,473,5,104,0,0,473,474,5,114,0,0,
        474,475,5,111,0,0,475,476,5,119,0,0,476,477,5,115,0,0,477,63,1,0,
        0,0,478,479,5,99,0,0,479,480,5,97,0,0,480,481,5,116,0,0,481,482,
        5,99,0,0,482,483,5,104,0,0,483,65,1,0,0,0,484,485,5,102,0,0,485,
        486,5,105,0,0,486,487,5,110,0,0,487,488,5,97,0,0,488,489,5,108,0,
        0,489,490,5,108,0,0,490,491,5,121,0,0,491,67,1,0,0,0,492,493,5,109,
        0,0,493,494,5,111,0,0,494,495,5,100,0,0,495,496,5,101,0,0,496,69,
        1,0,0,0,497,498,3,154,75,0,498,71,1,0,0,0,499,500,3,156,76,0,500,
        73,1,0,0,0,501,502,3,196,96,0,502,75,1,0,0,0,503,504,3,198,97,0,
        504,77,1,0,0,0,505,506,3,162,79,0,506,79,1,0,0,0,507,508,3,164,80,
        0,508,81,1,0,0,0,509,510,3,174,85,0,510,83,1,0,0,0,511,512,3,176,
        86,0,512,85,1,0,0,0,513,514,3,178,87,0,514,87,1,0,0,0,515,516,3,
        180,88,0,516,89,1,0,0,0,517,518,3,182,89,0,518,91,1,0,0,0,519,520,
        3,184,90,0,520,93,1,0,0,0,521,522,3,188,92,0,522,95,1,0,0,0,523,
        524,3,186,91,0,524,97,1,0,0,0,525,526,3,192,94,0,526,99,1,0,0,0,
        527,528,3,194,95,0,528,101,1,0,0,0,529,530,3,202,99,0,530,103,1,
        0,0,0,531,532,3,200,98,0,532,105,1,0,0,0,533,534,3,204,100,0,534,
        107,1,0,0,0,535,536,3,206,101,0,536,109,1,0,0,0,537,538,3,208,102,
        0,538,111,1,0,0,0,539,540,3,250,123,0,540,113,1,0,0,0,541,543,3,
        118,57,0,542,541,1,0,0,0,543,544,1,0,0,0,544,542,1,0,0,0,544,545,
        1,0,0,0,545,546,1,0,0,0,546,547,6,55,5,0,547,115,1,0,0,0,548,549,
        9,0,0,0,549,550,1,0,0,0,550,551,6,56,6,0,551,117,1,0,0,0,552,555,
        3,120,58,0,553,555,3,122,59,0,554,552,1,0,0,0,554,553,1,0,0,0,555,
        119,1,0,0,0,556,557,7,2,0,0,557,121,1,0,0,0,558,559,7,3,0,0,559,
        123,1,0,0,0,560,565,3,152,74,0,561,566,7,4,0,0,562,566,3,128,62,
        0,563,566,9,0,0,0,564,566,5,0,0,1,565,561,1,0,0,0,565,562,1,0,0,
        0,565,563,1,0,0,0,565,564,1,0,0,0,566,125,1,0,0,0,567,568,3,152,
        74,0,568,569,9,0,0,0,569,127,1,0,0,0,570,581,5,117,0,0,571,579,3,
        132,64,0,572,577,3,132,64,0,573,575,3,132,64,0,574,576,3,132,64,
        0,575,574,1,0,0,0,575,576,1,0,0,0,576,578,1,0,0,0,577,573,1,0,0,
        0,577,578,1,0,0,0,578,580,1,0,0,0,579,572,1,0,0,0,579,580,1,0,0,
        0,580,582,1,0,0,0,581,571,1,0,0,0,581,582,1,0,0,0,582,129,1,0,0,
        0,583,592,5,48,0,0,584,588,7,5,0,0,585,587,3,134,65,0,586,585,1,
        0,0,0,587,590,1,0,0,0,588,586,1,0,0,0,588,589,1,0,0,0,589,592,1,
        0,0,0,590,588,1,0,0,0,591,583,1,0,0,0,591,584,1,0,0,0,592,131,1,
        0,0,0,593,594,7,6,0,0,594,133,1,0,0,0,595,596,7,7,0,0,596,135,1,
        0,0,0,597,598,5,116,0,0,598,599,5,114,0,0,599,600,5,117,0,0,600,
        607,5,101,0,0,601,602,5,102,0,0,602,603,5,97,0,0,603,604,5,108,0,
        0,604,605,5,115,0,0,605,607,5,101,0,0,606,597,1,0,0,0,606,601,1,
        0,0,0,607,137,1,0,0,0,608,611,3,158,77,0,609,612,3,124,60,0,610,
        612,8,8,0,0,611,609,1,0,0,0,611,610,1,0,0,0,612,613,1,0,0,0,613,
        614,3,158,77,0,614,139,1,0,0,0,615,620,3,158,77,0,616,619,3,124,
        60,0,617,619,8,8,0,0,618,616,1,0,0,0,618,617,1,0,0,0,619,622,1,0,
        0,0,620,618,1,0,0,0,620,621,1,0,0,0,621,623,1,0,0,0,622,620,1,0,
        0,0,623,624,3,158,77,0,624,141,1,0,0,0,625,630,3,160,78,0,626,629,
        3,124,60,0,627,629,8,9,0,0,628,626,1,0,0,0,628,627,1,0,0,0,629,632,
        1,0,0,0,630,628,1,0,0,0,630,631,1,0,0,0,631,633,1,0,0,0,632,630,
        1,0,0,0,633,634,3,160,78,0,634,143,1,0,0,0,635,640,3,158,77,0,636,
        639,3,124,60,0,637,639,8,8,0,0,638,636,1,0,0,0,638,637,1,0,0,0,639,
        642,1,0,0,0,640,638,1,0,0,0,640,641,1,0,0,0,641,145,1,0,0,0,642,
        640,1,0,0,0,643,648,3,148,72,0,644,648,2,48,57,0,645,648,3,190,93,
        0,646,648,7,10,0,0,647,643,1,0,0,0,647,644,1,0,0,0,647,645,1,0,0,
        0,647,646,1,0,0,0,648,147,1,0,0,0,649,650,7,11,0,0,650,149,1,0,0,
        0,651,652,5,105,0,0,652,653,5,110,0,0,653,654,5,116,0,0,654,151,
        1,0,0,0,655,656,5,92,0,0,656,153,1,0,0,0,657,658,5,58,0,0,658,155,
        1,0,0,0,659,660,5,58,0,0,660,661,5,58,0,0,661,157,1,0,0,0,662,663,
        5,39,0,0,663,159,1,0,0,0,664,665,5,34,0,0,665,161,1,0,0,0,666,667,
        5,40,0,0,667,163,1,0,0,0,668,669,5,41,0,0,669,165,1,0,0,0,670,671,
        5,123,0,0,671,167,1,0,0,0,672,673,5,125,0,0,673,169,1,0,0,0,674,
        675,5,91,0,0,675,171,1,0,0,0,676,677,5,93,0,0,677,173,1,0,0,0,678,
        679,5,45,0,0,679,680,5,62,0,0,680,175,1,0,0,0,681,682,5,60,0,0,682,
        177,1,0,0,0,683,684,5,62,0,0,684,179,1,0,0,0,685,686,5,61,0,0,686,
        181,1,0,0,0,687,688,5,63,0,0,688,183,1,0,0,0,689,690,5,42,0,0,690,
        185,1,0,0,0,691,692,5,43,0,0,692,187,1,0,0,0,693,694,5,43,0,0,694,
        695,5,61,0,0,695,189,1,0,0,0,696,697,5,95,0,0,697,191,1,0,0,0,698,
        699,5,124,0,0,699,193,1,0,0,0,700,701,5,36,0,0,701,195,1,0,0,0,702,
        703,5,44,0,0,703,197,1,0,0,0,704,705,5,59,0,0,705,199,1,0,0,0,706,
        707,5,46,0,0,707,201,1,0,0,0,708,709,5,46,0,0,709,710,5,46,0,0,710,
        203,1,0,0,0,711,712,5,64,0,0,712,205,1,0,0,0,713,714,5,35,0,0,714,
        207,1,0,0,0,715,716,5,126,0,0,716,209,1,0,0,0,717,718,3,170,83,0,
        718,719,1,0,0,0,719,720,6,103,7,0,720,721,6,103,8,0,721,211,1,0,
        0,0,722,723,3,126,61,0,723,724,1,0,0,0,724,725,6,104,7,0,725,213,
        1,0,0,0,726,727,3,142,69,0,727,728,1,0,0,0,728,729,6,105,7,0,729,
        215,1,0,0,0,730,731,3,140,68,0,731,732,1,0,0,0,732,733,6,106,7,0,
        733,217,1,0,0,0,734,735,3,172,84,0,735,736,6,107,9,0,736,219,1,0,
        0,0,737,738,5,0,0,1,738,739,1,0,0,0,739,740,6,108,10,0,740,221,1,
        0,0,0,741,742,9,0,0,0,742,223,1,0,0,0,743,744,3,166,81,0,744,745,
        1,0,0,0,745,746,6,110,11,0,746,747,6,110,4,0,747,225,1,0,0,0,748,
        749,3,126,61,0,749,750,1,0,0,0,750,751,6,111,11,0,751,227,1,0,0,
        0,752,753,3,142,69,0,753,754,1,0,0,0,754,755,6,112,11,0,755,229,
        1,0,0,0,756,757,3,140,68,0,757,758,1,0,0,0,758,759,6,113,11,0,759,
        231,1,0,0,0,760,761,3,6,1,0,761,762,1,0,0,0,762,763,6,114,11,0,763,
        233,1,0,0,0,764,765,3,4,0,0,765,766,1,0,0,0,766,767,6,115,11,0,767,
        235,1,0,0,0,768,769,3,8,2,0,769,770,1,0,0,0,770,771,6,116,11,0,771,
        237,1,0,0,0,772,773,3,168,82,0,773,774,6,117,12,0,774,239,1,0,0,
        0,775,776,5,0,0,1,776,777,1,0,0,0,777,778,6,118,10,0,778,241,1,0,
        0,0,779,780,9,0,0,0,780,243,1,0,0,0,781,784,8,12,0,0,782,784,3,126,
        61,0,783,781,1,0,0,0,783,782,1,0,0,0,784,785,1,0,0,0,785,783,1,0,
        0,0,785,786,1,0,0,0,786,787,1,0,0,0,787,788,6,120,0,0,788,245,1,
        0,0,0,789,790,3,172,84,0,790,791,1,0,0,0,791,792,6,121,10,0,792,
        247,1,0,0,0,793,794,5,0,0,1,794,795,1,0,0,0,795,796,6,122,10,0,796,
        249,1,0,0,0,797,801,3,148,72,0,798,800,3,146,71,0,799,798,1,0,0,
        0,800,803,1,0,0,0,801,799,1,0,0,0,801,802,1,0,0,0,802,251,1,0,0,
        0,803,801,1,0,0,0,35,0,1,2,3,259,269,273,282,292,296,304,355,370,
        387,544,554,565,575,577,579,581,588,591,606,611,618,620,628,630,
        638,640,647,783,785,801,13,3,0,0,5,3,0,0,3,0,1,13,0,5,2,0,0,2,0,
        0,1,0,7,58,0,5,1,0,1,107,1,4,0,0,7,61,0,1,117,2
    ]

class ctx2lLexer(ctx2lLexerAdaptor):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    OFF_CHANNEL = 2
    COMMENT = 3

    Argument = 1
    TargetLanguageAction = 2
    LexerCharSet = 3

    TOKEN_REF = 1
    RULE_REF = 2
    LEXER_CHAR_SET = 3
    LBRACE = 4
    RBRACE = 5
    ARROW = 6
    DOC_COMMENT = 7
    BLOCK_COMMENT = 8
    LINE_COMMENT = 9
    INT = 10
    STRING_LITERAL = 11
    UNTERMINATED_STRING_LITERAL = 12
    BEGIN_ARGUMENT = 13
    BEGIN_ACTION = 14
    OPTIONS = 15
    TOKENS = 16
    CHANNELS = 17
    IMPORT = 18
    FRAGMENT = 19
    LEXER = 20
    PARSER = 21
    GRAMMAR = 22
    PROTECTED = 23
    PUBLIC = 24
    PRIVATE = 25
    RETURNS = 26
    LOCALS = 27
    THROWS = 28
    CATCH = 29
    FINALLY = 30
    MODE = 31
    COLON = 32
    COLONCOLON = 33
    COMMA = 34
    SEMI = 35
    LPAREN = 36
    RPAREN = 37
    RARROW = 38
    LT = 39
    GT = 40
    ASSIGN = 41
    QUESTION = 42
    STAR = 43
    PLUS_ASSIGN = 44
    PLUS = 45
    OR = 46
    DOLLAR = 47
    RANGE = 48
    DOT = 49
    AT = 50
    POUND = 51
    NOT = 52
    ID = 53
    WS = 54
    ERRCHAR = 55
    END_ARGUMENT = 56
    UNTERMINATED_ARGUMENT = 57
    ARGUMENT_CONTENT = 58
    END_ACTION = 59
    UNTERMINATED_ACTION = 60
    ACTION_CONTENT = 61
    UNTERMINATED_CHAR_SET = 62

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN", u"OFF_CHANNEL", 
                                                          u"COMMENT" ]

    modeNames = [ "DEFAULT_MODE", "Argument", "TargetLanguageAction", "LexerCharSet" ]

    literalNames = [ "<INVALID>",
            "'->'", "'import'", "'fragment'", "'lexer'", "'parser'", "'grammar'", 
            "'protected'", "'public'", "'private'", "'returns'", "'locals'", 
            "'throws'", "'catch'", "'finally'", "'mode'" ]

    symbolicNames = [ "<INVALID>",
            "TOKEN_REF", "RULE_REF", "LEXER_CHAR_SET", "LBRACE", "RBRACE", 
            "ARROW", "DOC_COMMENT", "BLOCK_COMMENT", "LINE_COMMENT", "INT", 
            "STRING_LITERAL", "UNTERMINATED_STRING_LITERAL", "BEGIN_ARGUMENT", 
            "BEGIN_ACTION", "OPTIONS", "TOKENS", "CHANNELS", "IMPORT", "FRAGMENT", 
            "LEXER", "PARSER", "GRAMMAR", "PROTECTED", "PUBLIC", "PRIVATE", 
            "RETURNS", "LOCALS", "THROWS", "CATCH", "FINALLY", "MODE", "COLON", 
            "COLONCOLON", "COMMA", "SEMI", "LPAREN", "RPAREN", "RARROW", 
            "LT", "GT", "ASSIGN", "QUESTION", "STAR", "PLUS_ASSIGN", "PLUS", 
            "OR", "DOLLAR", "RANGE", "DOT", "AT", "POUND", "NOT", "ID", 
            "WS", "ERRCHAR", "END_ARGUMENT", "UNTERMINATED_ARGUMENT", "ARGUMENT_CONTENT", 
            "END_ACTION", "UNTERMINATED_ACTION", "ACTION_CONTENT", "UNTERMINATED_CHAR_SET" ]

    ruleNames = [ "BlockComment", "DocComment", "LineComment", "BEGIN_LEXER_CHAR_SET", 
                  "LBRACE", "RBRACE", "ARROW", "DOC_COMMENT", "BLOCK_COMMENT", 
                  "LINE_COMMENT", "INT", "STRING_LITERAL", "UNTERMINATED_STRING_LITERAL", 
                  "BEGIN_ARGUMENT", "BEGIN_ACTION", "OPTIONS", "TOKENS", 
                  "CHANNELS", "WSNLCHARS", "IMPORT", "FRAGMENT", "LEXER", 
                  "PARSER", "GRAMMAR", "PROTECTED", "PUBLIC", "PRIVATE", 
                  "RETURNS", "LOCALS", "THROWS", "CATCH", "FINALLY", "MODE", 
                  "COLON", "COLONCOLON", "COMMA", "SEMI", "LPAREN", "RPAREN", 
                  "RARROW", "LT", "GT", "ASSIGN", "QUESTION", "STAR", "PLUS_ASSIGN", 
                  "PLUS", "OR", "DOLLAR", "RANGE", "DOT", "AT", "POUND", 
                  "NOT", "ID", "WS", "ERRCHAR", "Ws", "Hws", "Vws", "EscSeq", 
                  "EscAny", "UnicodeEsc", "DecimalNumeral", "HexDigit", 
                  "DecDigit", "BoolLiteral", "CharLiteral", "SQuoteLiteral", 
                  "DQuoteLiteral", "USQuoteLiteral", "NameChar", "NameStartChar", 
                  "Int", "Esc", "Colon", "DColon", "SQuote", "DQuote", "LParen", 
                  "RParen", "LBrace", "RBrace", "LBrack", "RBrack", "RArrow", 
                  "Lt", "Gt", "Equal", "Question", "Star", "Plus", "PlusAssign", 
                  "Underscore", "Pipe", "Dollar", "Comma", "Semi", "Dot", 
                  "Range", "At", "Pound", "Tilde", "NESTED_ARGUMENT", "ARGUMENT_ESCAPE", 
                  "ARGUMENT_STRING_LITERAL", "ARGUMENT_CHAR_LITERAL", "END_ARGUMENT", 
                  "UNTERMINATED_ARGUMENT", "ARGUMENT_CONTENT", "NESTED_ACTION", 
                  "ACTION_ESCAPE", "ACTION_STRING_LITERAL", "ACTION_CHAR_LITERAL", 
                  "ACTION_DOC_COMMENT", "ACTION_BLOCK_COMMENT", "ACTION_LINE_COMMENT", 
                  "END_ACTION", "UNTERMINATED_ACTION", "ACTION_CONTENT", 
                  "LEXER_CHAR_SET_BODY", "LEXER_CHAR_SET", "UNTERMINATED_CHAR_SET", 
                  "Id" ]

    grammarFileName = "ctx2lLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


    def action(self, localctx:RuleContext, ruleIndex:int, actionIndex:int):
        if self._actions is None:
            actions = dict()
            actions[13] = self.BEGIN_ARGUMENT_action 
            actions[107] = self.END_ARGUMENT_action 
            actions[117] = self.END_ACTION_action 
            self._actions = actions
        action = self._actions.get(ruleIndex, None)
        if action is not None:
            action(localctx, actionIndex)
        else:
            raise Exception("No registered action for:" + str(ruleIndex))


    def BEGIN_ARGUMENT_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 0:
             self.handleBeginArgument() 
     

    def END_ARGUMENT_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 1:
             self.handleEndArgument() 
     

    def END_ACTION_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 2:
             self.handleEndAction() 
     


