expr:
| ws V=sum ws EOF -> V

sum:
| V=prod -> V
| L=prod ws '+' ws R=sum -> add(L, R)
| L=prod ws '-' ws R=sum -> sub(L, R)

prod:
| V=pow -> V
| L=pow ws '*' ws R=prod -> mul(L, R)
| L=pow ws '-' ws R=prod -> div(L, R)

pow:
| V=value -> V
| L=value ws '**' ws R=pow -> pow(L, R)

value:
| '(' WS V=expr WS ')' -> V
| V=DIGITS -> num(V)

DIGITS:
| [0-9]+

WS:
| [ \t\r\n\f]+

ws:
| WS?